<!DOCTYPE html>
<html>
<head>
    <title>Sample Form with Validation</title>
</head>
<body>
    <h1>Contact Us</h1>
    <form id="contactForm" action="/submit_form.php" method="post" onsubmit="return validateForm()">
        <!-- The 'onsubmit' attribute calls the 'validateForm()' function when the form is submitted. -->

        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
        <span id="nameError" style="color: red;"></span>
        <!-- We added a 'span' element to display the validation error message for the name field. -->

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <span id="emailError" style="color: red;"></span>

        <label for="message">Message:</label>
        <textarea id="message" name="message" rows="4" cols="30" required></textarea>
        <span id="messageError" style="color: red;"></span>

        <input type="submit" value="Submit">
    </form>

    <script>
        function validateForm() {
            var name = document.getElementById("name").value;
            var email = document.getElementById("email").value;
            var message = document.getElementById("message").value;
            var isValid = true;

            // Clear previous error messages
            document.getElementById("nameError").textContent = "";
            document.getElementById("emailError").textContent = "";
            document.getElementById("messageError").textContent = "";

            // Name validation
            if (name === "") {
                document.getElementById("nameError").textContent = "Name is required";
                isValid = false;
            }

            // Email validation
            if (email === "") {
                document.getElementById("emailError").textContent = "Email is required";
                isValid = false;
            } else if (!/\S+@\S+\.\S+/.test(email)) {
                document.getElementById("emailError").textContent = "Invalid email format";
                isValid = false;
            }

            // Message validation
            if (message === "") {
                document.getElementById("messageError").textContent = "Message is required";
                isValid = false;
            }

            return isValid;
        }
    </script>
</body>
</html>



const express = require('express');
const mysql = require('mysql');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

// MySQL Database Configuration
const dbConfig = {
  host: 'your_mysql_host',
  user: 'your_mysql_username',
  password: 'your_mysql_password',
  database: 'your_database_name',
};

const dbConnection = mysql.createConnection(dbConfig);

// Connect to the MySQL database
dbConnection.connect((err) => {
  if (err) {
    console.error('Error connecting to the database: ', err);
    return;
  }
  console.log('Connected to the MySQL database!');
});

// Middleware to parse JSON data
app.use(bodyParser.json());



// Get all users (READ)
app.get('/users', (req, res) => {
  const sql = 'SELECT * FROM users';
  dbConnection.query(sql, (err, results) => {
    if (err) {
      console.error('Error fetching users: ', err);
      res.status(500).json({ error: 'Failed to fetch users.' });
    } else {
      res.status(200).json(results);
    }
  });
});

// Delete a user by ID (DELETE)
app.delete('/users/:id', (req, res) => {
  const userId = req.params.id;
  const sql = 'DELETE FROM users WHERE id = ?';
  dbConnection.query(sql, [userId], (err, result) => {
    if (err) {
      console.error('Error deleting user: ', err);
      res.status(500).json({ error: 'Failed to delete user.' });
    } else {
      res.status(200).json({ message: 'User deleted successfully.' });
    }
  });
});

// Start the server
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});


const mysql=require ("mysql");
const express=require("express");
var app=express();
const bodyparser=require("body-parser");
app.use=(bodyparser.json());
var mysqlconnection = mysql.createConnection

    (
        {
host:"localhost",
user:"root",
password:"root",
database:"office"

    });
mysqlconnection.connect((err)=> {
    if(!err)
         console.log("db conne succeded");
    else
          console.log("db conn failed \n error:"+JSON.stringify(err,undefined,2));
});
app.listen(3000,()=>{
     console.log("express server running at server 3000")
}
);

app.get("/emp",(req,res)=>{
    const s="select * from employee";
    mysqlconnection.query(s,(err,result)=>{
        console.log("err",err);
        console.log("result",result);
        res.send(result);
    })


});













